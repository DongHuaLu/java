/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.Dolph.web.struts.action;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintWriter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.upload.FormFile;

import com.Dolph.domain.Message;
import com.Dolph.domain.User;
import com.Dolph.service.FileService;
import com.Dolph.service.MessageService;
import com.Dolph.service.UserService;
import com.Dolph.web.struts.form.SendMessageForm;

/** 
 * MyEclipse Struts
 * Creation date: 03-04-2013
 * 
 * XDoclet definition:
 * @struts.action path="/sendMessage" name="sendMessageForm" parameter="flag" scope="request" validate="true"
 */
public class SendMessageAction extends DispatchAction {
	public ActionForward gosendmessage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
				return mapping.findForward("gosendmessage");
		
	}

	public ActionForward sendmessage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		SendMessageForm sendMessageForm=(SendMessageForm) form;
		User userfrom=(User)request.getSession().getAttribute("user");
		User userto=new User();		
		userto.setUsername(sendMessageForm.getSendto());
		UserService userservice=new UserService();		
		userto=userservice.getUser(userto);
		
		FileService fileService=new FileService();
		MessageService messageService=new MessageService();
		
		FormFile myfile=sendMessageForm.getMyfile();
		String uuid=fileService.getUUID(myfile.getFileName());
		InputStream is=null;
		try {
			is=myfile.getInputStream();
			String allPath=this.getServlet().getServletContext().getRealPath("/file")+"\\"+uuid;
			fileService.uploadFile(is,allPath);			
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}finally{
			try {
				is.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}		
		Message message=new Message();
		message.setFilename(myfile.getFileName());
		message.setFileuuid(uuid);
		message.setMessagehead(sendMessageForm.getMessagehead());
		message.setMessagetext(sendMessageForm.getMessagetext());
		message.setSendfrom(userfrom.getUserid());
		message.setSendto(userto.getUserid());
		if(messageService.addMessage(message)){
			request.setAttribute("info","发送成功");
			return mapping.findForward("sendok");
		}
		else
			return mapping.findForward("err");

	}
	
	public ActionForward downloadFile(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		
		String fileuuid=request.getParameter("fileuuid");
		response.setContentType("text/html;charset=utf-8");
		response.setHeader("Content-Disposition:", "attachment; filename="+fileuuid);
		String allPath=this.getServlet().getServletContext().getRealPath("/file")+"\\"+fileuuid;
		OutputStream os=null;
		FileInputStream fis=null;		
		try {
			fis=new FileInputStream(allPath);
			os=response.getOutputStream();
			int len=0;
			byte [] buff=new byte[1024];
			while((len=fis.read(buff))>0){
				os.write(buff,0,len);
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		finally{
			try {
				os.close();
				fis.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		
		return mapping.findForward("goback");
	}
}